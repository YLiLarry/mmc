gcc ./cnma/*.c  -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=0 -DCHECK_MMC=0 -std=c11 -O2 -c -Wall 
g++ main_benchmark_fgemm_mp.cpp  *.o  -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=0 -DCHECK_MMC=0 -O2 -Wall --std=c++11 -I"/home/y667li/mmc/build/linbox/include" -I"/home/y667li/mmc/build/givaro/include" -I"/home/y667li/mmc/build/fflas-ffpack/include" -L"/home/y667li/mmc/build/linbox/lib" -L"/home/y667li/mmc/build/givaro/lib" -L"/home/y667li/mmc/build/OpenBLAS/lib" -L"/home/y667li/mmc/build/fflas-ffpack/lib" -lgivaro -lopenblas -llinbox -lgmp -fopenmp 
make run
make[1]: Entering directory `/home/y667li/mmc'
chmod u+x ./a.out
./a.out
benchmarking with random inputs in Givaro::Modular<Ints>(integer of 524288 bits)
===========================================
============= Benchmark Naive =============
===========================================
-------------------------------
FGEMM_MP: nb prime: 48641
FGEMM_MP:  product: 1048588 bits
FGEMM_MP:     init: 201414ms
FGEMM_MP:   to RNS: 690800ms
==========================================
Pointwise fgemm : 21.6409 (48641) moduli 
==========================================
FGEMM_MP:  RNS Mul: 21644ms
FGEMM_MP: from RNS: 669077ms
-------------------------------
===========================================
======= Benchmark TwoPhaseMargeLeast ======
===========================================
########## TwoPhaseAlgo constructor ##########
 - m_level_1_moduli:  - count: 407
 - max bit length: 4229
 - product bit length: 1052363

 - m_level_2_moduli:  - count: 404
 - max bit length: 21
 - product bit length: 8484

########## TwoPhaseAlgo constructor ends ##########
########## matrix_reduce ##########
..... phase 1 reduce .....
.........................................
Timer: 44.8457s (27.6878 cpu) [1]
..... phase 1 reduce ends .....
..... phase 2 reduce .....
.......... finit_rns ..........
.......... finit_rns ends ..........
Timer: 64.3313s (63.1285 cpu) [1]
..... phase 2 reduce ends .....
########## matrix_reduce ends ##########
########## matrix_reduce ##########
..... phase 1 reduce .....
.........................................
Timer: 44.8516s (26.9549 cpu) [1]
..... phase 1 reduce ends .....
..... phase 2 reduce .....
.......... finit_rns ..........
.......... finit_rns ends ..........
Timer: 83.568s (63.4706 cpu) [1]
..... phase 2 reduce ends .....
########## matrix_reduce ends ##########
########## phase2_mult ##########
.......... fgemm ..........
==========================================
Pointwise fgemm : 91.3627 (164428) moduli 
==========================================
.......... fgemm ends ..........
########## phase2_mult ends ##########
########## matrix_recover ##########
..... phase 2 recovery .....
.......... fflas_new_sim_recover ..........
.......... fconvert_rns ..........
.......... fconvert_rns ends ..........
.......... fflas_new_sim_recover ends ..........
Timer: 47.0453s (45.6426 cpu) [1]
..... phase 2 recovery ends .....
..... phase 1 recovery .....
.......... precompute_Mi_marge ..........
.......... precompute_Mi_marge ends ..........
.........................................
Timer: 6344.04s (6279.47 cpu) [1]
..... phase 1 recovery ends .....
########## matrix_recover ends ##########
===========================================
======= Benchmark TwoPhaseMargeMost =======
===========================================
########## TwoPhaseAlgo constructor ##########
 - m_level_1_moduli:  - count: 66
 - max bit length: 16381
 - product bit length: 1059076

 - m_level_2_moduli:  - count: 1561
 - max bit length: 21
 - product bit length: 32769

########## TwoPhaseAlgo constructor ends ##########
########## matrix_reduce ##########
..... phase 1 reduce .....
.........................................
Timer: 70.3964s (6.11362 cpu) [1]
..... phase 1 reduce ends .....
..... phase 2 reduce .....
.......... finit_rns ..........
.......... finit_rns ends ..........
Timer: 130.383s (66.5031 cpu) [1]
..... phase 2 reduce ends .....
########## matrix_reduce ends ##########
########## matrix_reduce ##########
..... phase 1 reduce .....
.........................................
Timer: 33.6806s (5.90535 cpu) [1]
..... phase 1 reduce ends .....
..... phase 2 reduce .....
.......... finit_rns ..........
.......... finit_rns ends ..........
Timer: 82.4377s (62.9292 cpu) [1]
..... phase 2 reduce ends .....
########## matrix_reduce ends ##########
########## phase2_mult ##########
.......... fgemm ..........
==========================================
Pointwise fgemm : 46.2742 (103026) moduli 
==========================================
.......... fgemm ends ..........
########## phase2_mult ends ##########
########## matrix_recover ##########
..... phase 2 recovery .....
.......... fflas_new_sim_recover ..........
.......... fconvert_rns ..........
.......... fconvert_rns ends ..........
.......... fflas_new_sim_recover ends ..........
Timer: 85.278s (68.6456 cpu) [1]
..... phase 2 recovery ends .....
..... phase 1 recovery .....
.......... precompute_Mi_marge ..........
.......... precompute_Mi_marge ends ..........
.........................................
Timer: 458.016s (447.228 cpu) [1]
..... phase 1 recovery ends .....
########## matrix_recover ends ##########
===========================================
====== Benchmark TwoPhasePargeBlock =======
===========================================
expo: 0000000000000000000000000000000000000000000000000000000000001111
expo: 0000000000000000000000000000000000000000000000000000000000001110
expo: 0000000000000000000000000000000000000000000000000000000000001100
expo: 0000000000000000000000000000000000000000000000000000000000001000
expo: 0000000000000000000000000000000000000000000000000000000011110000
expo: 0000000000000000000000000000000000000000000000000000000011100000
expo: 0000000000000000000000000000000000000000000000000000000011000000
expo: 0000000000000000000000000000000000000000000000000000000010000000
expo: 0000000000000000000000000000000000000000000000000000111100000000
expo: 0000000000000000000000000000000000000000000000000000111000000000
expo: 0000000000000000000000000000000000000000000000000000110000000000
expo: 0000000000000000000000000000000000000000000000000000100000000000
expo: 0000000000000000000000000000000000000000000000001111000000000000
expo: 0000000000000000000000000000000000000000000000001110000000000000
expo: 0000000000000000000000000000000000000000000000001100000000000000
expo: 0000000000000000000000000000000000000000000000001000000000000000
We ran out of parge numbers, consider increasing block size or max bound.
Currently generated: 
 - max_bound: 262144
 - count: 16
 - max bit length: 61441
 - product bit length: 214082

Trying block size 5
expo: 0000000000000000000000000000000000000000000000000000000000011111
expo: 0000000000000000000000000000000000000000000000000000000000011110
expo: 0000000000000000000000000000000000000000000000000000000000011100
expo: 0000000000000000000000000000000000000000000000000000000000011000
expo: 0000000000000000000000000000000000000000000000000000000000010000
expo: 0000000000000000000000000000000000000000000000000000001111100000
expo: 0000000000000000000000000000000000000000000000000000001111000000
expo: 0000000000000000000000000000000000000000000000000000001110000000
expo: 0000000000000000000000000000000000000000000000000000001100000000
expo: 0000000000000000000000000000000000000000000000000000001000000000
expo: 0000000000000000000000000000000000000000000000000111110000000000
expo: 0000000000000000000000000000000000000000000000000111100000000000
expo: 0000000000000000000000000000000000000000000000000111000000000000
expo: 0000000000000000000000000000000000000000000000000110000000000000
expo: 0000000000000000000000000000000000000000000000000100000000000000
We ran out of parge numbers, consider increasing block size or max bound.
Currently generated: 
 - max_bound: 262144
 - count: 15
 - max bit length: 31745
 - product bit length: 136354

Trying block size 6
expo: 0000000000000000000000000000000000000000000000000000000000111111
expo: 0000000000000000000000000000000000000000000000000000000000111110
expo: 0000000000000000000000000000000000000000000000000000000000111100
expo: 0000000000000000000000000000000000000000000000000000000000111000
expo: 0000000000000000000000000000000000000000000000000000000000110000
expo: 0000000000000000000000000000000000000000000000000000000000100000
expo: 0000000000000000000000000000000000000000000000000000111111000000
expo: 0000000000000000000000000000000000000000000000000000111110000000
expo: 0000000000000000000000000000000000000000000000000000111100000000
expo: 0000000000000000000000000000000000000000000000000000111000000000
expo: 0000000000000000000000000000000000000000000000000000110000000000
expo: 0000000000000000000000000000000000000000000000000000100000000000
expo: 0000000000000000000000000000000000000000000000111111000000000000
expo: 0000000000000000000000000000000000000000000000111110000000000000
expo: 0000000000000000000000000000000000000000000000111100000000000000
expo: 0000000000000000000000000000000000000000000000111000000000000000
expo: 0000000000000000000000000000000000000000000000110000000000000000
########## TwoPhaseAlgo constructor ##########
 - m_level_1_moduli:  - count: 17
 - max bit length: 258049
 - product bit length: 1204610

 - m_level_2_moduli:  - count: 24731
 - max bit length: 21
 - product bit length: 516111

########## TwoPhaseAlgo constructor ends ##########
########## matrix_reduce ##########
..... phase 1 reduce .....
.........................................
Timer: 39.7922s (1.91025 cpu) [1]
..... phase 1 reduce ends .....
..... phase 2 reduce .....
posix_memalign error
.......... finit_rns ..........
posix_memalign error
make[1]: *** [run] Segmentation fault (core dumped)
make[1]: Leaving directory `/home/y667li/mmc'
make: *** [bench] Error 2
gcc ./cnma/*.c  -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=1 -DCHECK_MMC=1 -std=c11 -O2 -c -Wall 
g++ main_benchmark_fgemm_mp.cpp  *.o  -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=1 -DCHECK_MMC=1 -O2 -Wall --std=c++11 -I"/home/y667li/mmc/build/linbox/include" -I"/home/y667li/mmc/build/givaro/include" -I"/home/y667li/mmc/build/fflas-ffpack/include" -L"/home/y667li/mmc/build/linbox/lib" -L"/home/y667li/mmc/build/givaro/lib" -L"/home/y667li/mmc/build/OpenBLAS/lib" -L"/home/y667li/mmc/build/fflas-ffpack/lib" -lgivaro -lopenblas -llinbox -lgmp -fopenmp 
make run
make[1]: Entering directory `/home/y667li/mmc'
chmod u+x ./a.out
./a.out
benchmarking with random inputs in Givaro::Modular<Ints>(integer of 524288 bits)
===========================================
============= Benchmark Naive =============
===========================================
^Cmake[1]: *** [run] Interrupt
make: *** [bench] Interrupt
DEBUG_FLAGS := -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=0 -DCHECK_MMC=0
make: DEBUG_FLAGS: Command not found
make: *** [bench] Error 127
makefile:110: *** commands commence before first target.  Stop.
makefile:110: *** commands commence before first target.  Stop.
gcc ./cnma/*.c  -DPROFILE_FGEMM_MP=1 -DTIME_MMC=1 -DPSEUDO_RANDOM_MMC=0 -DDEBUG_MMC=0 -DCHECK_MMC=0 -std=c11 -O2 -c -Wall 
g++ main_benchmark_fgemm_mp.cpp  *.o  -O2 -Wall --std=c++11 -I"/home/y667li/mmc/build/linbox/include" -I"/home/y667li/mmc/build/givaro/include" -I"/home/y667li/mmc/build/fflas-ffpack/include" -L"/home/y667li/mmc/build/linbox/lib" -L"/home/y667li/mmc/build/givaro/lib" -L"/home/y667li/mmc/build/OpenBLAS/lib" -L"/home/y667li/mmc/build/fflas-ffpack/lib" -lgivaro -lopenblas -llinbox -lgmp -fopenmp 
make run
make[1]: Entering directory `/home/y667li/mmc'
chmod u+x ./a.out
./a.out
benchmarking with random inputs in Givaro::Modular<Ints>(integer of 524288 bits)
===========================================
============= Benchmark Naive =============
===========================================
===========================================
======= Benchmark TwoPhaseMargeLeast ======
===========================================
.......... precompute_Mi_marge ..........
.......... precompute_Mi_marge ends ..........
===========================================
======= Benchmark TwoPhaseMargeMost =======
===========================================
.......... precompute_Mi_marge ..........
.......... precompute_Mi_marge ends ..........
===========================================
====== Benchmark TwoPhasePargeBlock =======
===========================================
expo: 0000000000000000000000000000000000000000000000000000000000001111
expo: 0000000000000000000000000000000000000000000000000000000000001110
expo: 0000000000000000000000000000000000000000000000000000000000001100
expo: 0000000000000000000000000000000000000000000000000000000000001000
expo: 0000000000000000000000000000000000000000000000000000000011110000
expo: 0000000000000000000000000000000000000000000000000000000011100000
expo: 0000000000000000000000000000000000000000000000000000000011000000
expo: 0000000000000000000000000000000000000000000000000000000010000000
expo: 0000000000000000000000000000000000000000000000000000111100000000
expo: 0000000000000000000000000000000000000000000000000000111000000000
expo: 0000000000000000000000000000000000000000000000000000110000000000
expo: 0000000000000000000000000000000000000000000000000000100000000000
expo: 0000000000000000000000000000000000000000000000001111000000000000
expo: 0000000000000000000000000000000000000000000000001110000000000000
expo: 0000000000000000000000000000000000000000000000001100000000000000
expo: 0000000000000000000000000000000000000000000000001000000000000000
We ran out of parge numbers, consider increasing block size or max bound.
Currently generated: 
 - max_bound: 262144

Trying block size 5
expo: 0000000000000000000000000000000000000000000000000000000000011111
expo: 0000000000000000000000000000000000000000000000000000000000011110
expo: 0000000000000000000000000000000000000000000000000000000000011100
expo: 0000000000000000000000000000000000000000000000000000000000011000
expo: 0000000000000000000000000000000000000000000000000000000000010000
expo: 0000000000000000000000000000000000000000000000000000001111100000
expo: 0000000000000000000000000000000000000000000000000000001111000000
expo: 0000000000000000000000000000000000000000000000000000001110000000
expo: 0000000000000000000000000000000000000000000000000000001100000000
expo: 0000000000000000000000000000000000000000000000000000001000000000
expo: 0000000000000000000000000000000000000000000000000111110000000000
expo: 0000000000000000000000000000000000000000000000000111100000000000
expo: 0000000000000000000000000000000000000000000000000111000000000000
expo: 0000000000000000000000000000000000000000000000000110000000000000
expo: 0000000000000000000000000000000000000000000000000100000000000000
We ran out of parge numbers, consider increasing block size or max bound.
Currently generated: 
 - max_bound: 262144

Trying block size 6
expo: 0000000000000000000000000000000000000000000000000000000000111111
expo: 0000000000000000000000000000000000000000000000000000000000111110
expo: 0000000000000000000000000000000000000000000000000000000000111100
expo: 0000000000000000000000000000000000000000000000000000000000111000
expo: 0000000000000000000000000000000000000000000000000000000000110000
expo: 0000000000000000000000000000000000000000000000000000000000100000
expo: 0000000000000000000000000000000000000000000000000000111111000000
expo: 0000000000000000000000000000000000000000000000000000111110000000
expo: 0000000000000000000000000000000000000000000000000000111100000000
expo: 0000000000000000000000000000000000000000000000000000111000000000
expo: 0000000000000000000000000000000000000000000000000000110000000000
expo: 0000000000000000000000000000000000000000000000000000100000000000
expo: 0000000000000000000000000000000000000000000000111111000000000000
expo: 0000000000000000000000000000000000000000000000111110000000000000
expo: 0000000000000000000000000000000000000000000000111100000000000000
expo: 0000000000000000000000000000000000000000000000111000000000000000
expo: 0000000000000000000000000000000000000000000000110000000000000000
.......... precompute_Mi_parge_block ..........
.......... precompute_Mi_parge_block ends ..........
Time fgemm: 1567.17 Gfops: 3.34545e-07 (total:1567.17) N6Givaro7IntegerE | perword: 0.00274059 | benchmarked with random inputs in Givaro::Modular<Ints>(integer of 524288 bits) |  -q -1 -b 524288 -m 64 -k 64 -n 64 -w -1 -i 1 -s 1534441556  | Freivalds: 1686.37
Time TwoPhaseMargeLeast: 6569.38
Time TwoPhaseMargeMost: 698.741
Time TwoPhasePargeBlock: 5241.64
Time Naive: 1571.17
make[1]: Leaving directory `/home/y667li/mmc'
